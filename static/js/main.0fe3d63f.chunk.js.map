{"version":3,"sources":["Day.js","Calendar.js","App.js","index.js"],"names":["Day","console","log","dayClasses","classNames","this","props","dayEmotion","className","onClick","test","React","Component","Calendar","state","isLoading","userDays","map","day","emotion","INITIAL_STATE","selectedDay","changingEmotion","days","App","onUpdateSelectedDay","setState","prevState","prevSelectedDay","prevChangingEmotion","j","onChangeChangingEmotion","event","target","value","onChangeSelectedDay","parseInt","onAddItem","concat","type","onChange","ReactDOM","render","document","getElementById"],"mappings":"oPAkBiBA,E,+KAXRC,QAAQC,IAAI,kB,+BAEP,IAAD,OACDC,EAAaC,IAAW,MAAOC,KAAKC,MAAMC,YAChD,OAAO,yBAAKC,UAAaL,EAAYM,QAAS,kBAAM,EAAKC,SACrD,yC,GAPQC,IAAMC,WCqBTC,E,YApBb,WAAYP,GAAO,IAAD,8BAChB,4CAAMA,KAGRQ,MAAQ,CACNC,WAAY,GALI,E,sEAUlB,OAAO,6BACL,wCACCV,KAAKC,MAAMU,SAASC,IAAI,SAAAC,GACvB,OAAO,kBAAC,EAAD,CAAKX,WAAYW,EAAIC,iB,GAdXR,IAAMC,WCFvBQ,EAAgB,CACpBC,YAAa,EACbC,gBAAkB,GAClBC,KAAM,CAAC,CAACJ,QAAQ,aAoFHK,E,YAhFb,WAAYlB,GAAQ,IAAD,8BACjB,4CAAMA,KAIRmB,oBAAsB,WACpB,EAAKC,SAAS,SAAAC,GACZ,IAAMC,EAAkBD,EAAUN,YAClCpB,QAAQC,IAAI,uBAAuB0B,GACnC3B,QAAQC,IAAI,8BAA8B0B,GAC1C,IAAMC,EAAsBF,EAAUL,gBAWtC,OAVArB,QAAQC,IAAI,uBAAuB2B,GAU5B,CACLR,YAAcO,EACdN,gBAAkBO,EAClBN,KAZWI,EAAUJ,KAAKN,IAAI,SAACC,EAAKY,GACpC,OAAIA,IAAMH,EAAUN,aAClBpB,QAAQC,IAAI,MACL,CAACiB,QAAQQ,EAAUL,mBAE1BrB,QAAQC,IAAI,QACLgB,SAlBI,EA6BnBa,wBAA0B,SAAAC,GACxB,EAAKN,SAAS,CAAEJ,gBAAiBU,EAAMC,OAAOC,SA9B7B,EAiCnBC,oBAAsB,SAAAH,GACpB,EAAKN,SAAS,CAAEL,YAAae,SAASJ,EAAMC,OAAOC,UAlClC,EAqCnBG,UAAY,WACV,EAAKX,SAAS,SAAAC,GACZ,IAAMJ,EAAOI,EAAUJ,KAAKe,OAAO,CAACnB,QAAQ,YAG5C,MAAO,CACLE,YAHsBM,EAAUN,YAIhCC,gBAH0BK,EAAUL,gBAIpCC,WA3CJ,EAAKT,MAAQM,EAFI,E,sEAkDT,IACAG,EAASlB,KAAKS,MAAdS,KAER,OADAtB,QAAQC,IAAIqB,GACL,6BACL,kBAAC,EAAD,CAAUP,SAAUO,IACpB,4BACIgB,KAAK,SACL9B,QAASJ,KAAKgC,WAFlB,OAIE,6BACF,2BACIE,KAAK,SACLL,MAAO7B,KAAKS,MAAMO,YAClBmB,SAAUnC,KAAK8B,sBAEjB,2BACEI,KAAK,OACLL,MAAO7B,KAAKS,MAAMQ,gBAClBkB,SAAUnC,KAAK0B,0BAEjB,6BACA,4BACEQ,KAAK,SACL9B,QAASJ,KAAKoB,qBAFhB,e,GAxEUd,IAAMC,WCNxB6B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0fe3d63f.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Day.css\";\nimport classNames from 'classnames'\n\n\nclass Day extends React.Component {\n  \n  test(){console.log(\"div selected\")}\n\n    render() {\n      const dayClasses = classNames('day', this.props.dayEmotion);\n      return <div className = {dayClasses} onClick={() => this.test()}>\n          <h3> Day</h3>\n      </div>\n  \n    }\n  }\n  \n  export default Day;","import React from 'react';\nimport Day from './Day';\n\n\n\nclass Calendar extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  state = {\n    isLoading : true\n  }\n  \n\n  render(){\n  return <div>\n    <h1>Calendar</h1>\n    {this.props.userDays.map(day => {\n      return <Day dayEmotion={day.emotion} />\n    }\n    )\n    }\n  </div>}\n}\n\nexport default Calendar;","import React from 'react';\nimport Calendar from './Calendar';\n\nconst INITIAL_STATE = {\n  selectedDay: 0,\n  changingEmotion : \"\",\n  days: [{emotion:\"neutral\"}],\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  onUpdateSelectedDay = () => {\n    this.setState(prevState => {\n      const prevSelectedDay = prevState.selectedDay;\n      console.log(\"onUpdateSelectedDay:\"+prevSelectedDay);\n      console.log(\"onUpdateSelectedDay:\"+typeof prevSelectedDay);\n      const prevChangingEmotion = prevState.changingEmotion;\n      console.log(\"onUpdateSelectedDay:\"+prevChangingEmotion);\n      const days = prevState.days.map((day, j) => {\n        if (j === prevState.selectedDay) {\n          console.log(\"if\");\n          return {emotion:prevState.changingEmotion};\n        } else {\n          console.log(\"else\");\n          return day;\n        }\n      });\n      return {\n        selectedDay : prevSelectedDay,\n        changingEmotion : prevChangingEmotion,\n        days,\n      };\n    });\n  };\n\n  onChangeChangingEmotion = event => {\n    this.setState({ changingEmotion: event.target.value });\n  };\n\n  onChangeSelectedDay = event => {\n    this.setState({ selectedDay: parseInt(event.target.value) });\n  };\n  \n  onAddItem = () => {\n    this.setState(prevState => {\n      const days = prevState.days.concat({emotion:\"neutral\"});\n      const prevSelectedDay = prevState.selectedDay;\n      const prevChangingEmotion = prevState.changingEmotion;\n      return {\n        selectedDay : prevSelectedDay,\n        changingEmotion : prevChangingEmotion,\n        days,\n      };\n    });\n  };\n\n  render() {\n    const { days } = this.state;\n    console.log(days);\n    return <div>\n      <Calendar userDays={days} />\n      <button\n          type=\"button\"\n          onClick={this.onAddItem}\n        >Add</button>\n        <br/>\n      <input\n          type=\"number\"\n          value={this.state.selectedDay}\n          onChange={this.onChangeSelectedDay}\n        />\n        <input\n          type=\"text\"\n          value={this.state.changingEmotion}\n          onChange={this.onChangeChangingEmotion}\n        />\n        <br/>\n        <button\n          type=\"button\"\n          onClick={this.onUpdateSelectedDay}\n        >Update</button>\n    </div>\n\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}