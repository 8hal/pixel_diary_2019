{"version":3,"sources":["Day.js","Calendar.js","Daycard.js","App.js","index.js"],"names":["Day","props","handleOnClick","handleSelectedDay","state","index","dayIndex","selected","styles","reactCSS","color","background","this","dayColor","seletedColor","border","dayClasses","classNames","style","daySelectedDay","className","onClick","React","Component","Calendar","isLoading","userDays","map","day","userSelectedDay","INITIAL_STATE","hexColor","tag","Daycard","daycardDayOutput","ptag","setState","daycardHandleUpdate","handleUpdate","onChangeTag","event","target","value","handleChange","hex","card","width","height","borderRadius","center","margin","padding","textAlign","update","type","onChange","selectedDay","days","App","daycardElement","current","onUpdateSelectedDay","changingColor","changingTag","prevState","j","onChangeSelectedDay","parseInt","onAddItem","concat","createRef","console","log","ref","daycardDayColor","daycardDayTag","dayTag","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ccac05d.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Day.css\";\nimport classNames from 'classnames'\nimport reactCSS from 'reactcss'\n\n\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: this.props.dayIndex,\n      selected: false\n    }\n  }\n\n  handleOnClick = () => {\n    this.props.handleSelectedDay(this.state.index);\n  }\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          background: this.props.dayColor,\n        },\n        seletedColor: {\n          background: this.props.dayColor,\n          border: '1px solid black'\n        }\n      },\n    });\n    const dayClasses = classNames('day');\n    return <div style = {this.state.index === this.props.daySelectedDay ? styles.seletedColor : styles.color  } className={dayClasses} onClick={this.handleOnClick}>\n      <h4> {this.state.index}</h4>\n    </div>\n\n  }\n}\n\nexport default Day;","import React from 'react';\nimport Day from './Day';\n\n\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    }\n  }\n\n\n  render() {\n    return <div >\n      <h1>Calendar</h1>\n      {this.props.userDays.map((day, index) => {\n        return <Day daySelectedDay={this.props.userSelectedDay} dayColor={day.color} handleSelectedDay={this.props.handleSelectedDay} dayIndex={index} />\n      }\n      )\n      }\n    </div>\n  }\n}\n\nexport default Calendar;","import React from 'react';\nimport reactCSS from 'reactcss'\nimport { SliderPicker } from 'react-color';\n\nconst INITIAL_STATE = {\n    hexColor:\"#aef113\",\n    tag: \"\"\n}\n\nclass Daycard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = INITIAL_STATE\n    }\n\n    daycardDayOutput = (color,ptag) => {\n        this.setState({tag : ptag, hexColor: color})\n    }\n\n    daycardHandleUpdate = () => {\n        this.props.handleUpdate(this.state.hexColor,this.state.tag);\n    };\n\n    onChangeTag = (event) => {\n        this.setState({ tag: event.target.value });\n    }\n\n    handleChange = (color) => {\n        this.setState({ hexColor: color.hex })\n    };\n\n    render() {\n        const styles = reactCSS({\n            'default': {\n                card: {\n                    width: '100%',\n                    height: '200px',\n                    borderRadius: '10px',\n                    background: this.state.hexColor\n                },\n                center: {\n                    margin: 'auto',\n                    width: '50%',\n                    padding: '50px',\n                    textAlign: 'center',\n                },\n                update: {\n                    background : 'white',\n                    width: '30%',\n                    border: '1px solid black',\n                    textAlign: 'center',\n                }\n            },\n        });\n\n        return <div>\n            <div style={styles.card}>\n                <div style={styles.center}>\n                    <label>Input Tag\n                    <br/>\n                        <input\n                        type=\"text\"\n                        value={this.state.tag}\n                        onChange={this.onChangeTag}\n                    /></label>\n                    <button style={styles.update}\n                        type=\"button\"\n                        onClick={this.daycardHandleUpdate}\n                    >Update</button>\n                </div>\n                <SliderPicker color={this.state.hexColor} onChange={this.handleChange} />\n            </div>\n        </div>\n\n    }\n}\n\nexport default Daycard;","import React from 'react';\nimport Calendar from './Calendar';\nimport Daycard from './Daycard';\n\nconst INITIAL_STATE = {\n  selectedDay: 0,\n  days: [\n    {\n      color: \"#aef113\",\n      tag: \"\"\n    },\n    {\n      color: \"#aef113\",\n      tag: \"\"\n    },\n    {\n      color: \"#aef113\",\n      tag: \"\"\n    },\n    {\n      color: \"#aef113\",\n      tag: \"\"\n    },\n    {\n      color: \"#aef113\",\n      tag: \"\"\n    },\n    {\n      color: \"#aef113\",\n      tag: \"\"\n    },\n    {\n      color: \"#aef113\",\n      tag: \"\"\n    },\n  ]\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n    this.daycardElement = React.createRef();\n  }\n\n  handleSelectedDay = (index) => { \n    this.daycardElement.current.daycardDayOutput(this.state.days[index].color,this.state.days[index].tag);\n    this.setState({ \n      selectedDay: index\n    });\n }\n\n  onUpdateSelectedDay = (changingColor,changingTag) => {\n    this.setState(prevState => {\n      const days = prevState.days.map((day, j) => {\n        if (j === prevState.selectedDay) {\n          return { color: changingColor, tag: changingTag };\n        } else {\n          return day;\n        }\n      });\n      return {\n        days,\n      };\n    });\n    this.handleSelectedDay(this.state.selectedDay + 1);\n  };\n\n  onChangeSelectedDay = event => {\n    this.setState({ selectedDay: parseInt(event.target.value) });\n  };\n\n  onAddItem = () => {\n    this.setState(prevState => {\n      const days = prevState.days.concat({ color: \"#aef113\", tag: \"\" });\n      return {\n        days,\n      };\n    });\n  };\n\n  render() {\n    const { days, selectedDay } = this.state;\n    console.log(\"App state:\");\n    console.log(this.state);\n    return <div>\n      <button\n        type=\"button\"\n        onClick={this.onAddItem}\n      >Add a day</button>\n      <Calendar userSelectedDay={selectedDay} userDays={days} handleSelectedDay={this.handleSelectedDay} />\n      <br />\n      <Daycard \n      ref = {this.daycardElement}\n      handleUpdate={this.onUpdateSelectedDay}\n      daycardDayColor={this.state.dayColor}\n      daycardDayTag={this.state.dayTag}\n      >\n      </Daycard>\n    </div>\n\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}