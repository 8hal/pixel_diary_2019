{"version":3,"sources":["Day.js","Calendar.js","Daycard.js","App.js","index.js"],"names":["Day","props","handleOnClick","console","log","handleSelectedDay","state","index","dayIndex","selected","styles","reactCSS","color","background","this","dayColor","seletedColor","border","dayClasses","classNames","style","daySelectedDay","className","onClick","React","Component","Calendar","isLoading","userDays","map","day","userSelectedDay","INITIAL_STATE","r","g","b","a","tag","Daycard","daycardHandleUpdate","handleUpdate","setState","onChangeTag","event","handleChangingTag","target","value","handleChange","rgb","handleChangeComplete","handleChangingColor","hex","width","height","borderRadius","center","margin","padding","textAlign","update","type","onChange","onChangeComplete","selectedDay","changingColor","changingTag","days","App","onUpdateSelectedDay","prevState","j","onChangeSelectedDay","parseInt","onAddItem","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7af3a0f5.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Day.css\";\nimport classNames from 'classnames'\nimport reactCSS from 'reactcss'\n\n\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: this.props.dayIndex,\n      selected: false\n    }\n  }\n\n  handleOnClick = () => {\n    console.log(this.props);\n    this.props.handleSelectedDay(this.state.index);\n  }\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          background: this.props.dayColor,\n        },\n        seletedColor: {\n          background: this.props.dayColor,\n          border: '1px solid black'\n        }\n      },\n    });\n    const dayClasses = classNames('day');\n    return <div style = {this.state.index === this.props.daySelectedDay ? styles.seletedColor : styles.color  } className={dayClasses} onClick={this.handleOnClick}>\n      <h4> {this.state.index}</h4>\n    </div>\n\n  }\n}\n\nexport default Day;","import React from 'react';\nimport Day from './Day';\n\n\n\nclass Calendar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    }\n  }\n\n\n  render() {\n    console.log(this.props.userDays)\n    return <div >\n      <h1>Calendar</h1>\n      {this.props.userDays.map((day, index) => {\n        return <Day daySelectedDay={this.props.userSelectedDay} dayColor={day.color} handleSelectedDay={this.props.handleSelectedDay} dayIndex={index} />\n      }\n      )\n      }\n    </div>\n  }\n}\n\nexport default Calendar;","import React from 'react';\nimport reactCSS from 'reactcss'\nimport { SliderPicker } from 'react-color';\n\nconst INITIAL_STATE = {\n    color: {\n        r: '241',\n        g: '112',\n        b: '19',\n        a: '1',\n    },\n    tag: \"\"\n}\n\nclass Daycard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = INITIAL_STATE\n    }\n    daycardHandleUpdate = () => {\n        this.props.handleUpdate();\n        this.setState(INITIAL_STATE);\n        console.log(this.state);\n    };\n\n    onChangeTag = (event) => {\n        this.props.handleChangingTag(event.target.value);\n        this.setState({ tag: event.target.value });\n    }\n\n    handleChange = (color) => {\n        this.setState({ color: color.rgb })\n    };\n\n    handleChangeComplete = (color, event) => {\n        this.props.handleChangingColor(color.hex);\n    };\n\n    render() {\n        const styles = reactCSS({\n            'default': {\n                color: {\n                    width: '100%',\n                    height: '200px',\n                    borderRadius: '10px',\n                    background: `rgba(${this.state.color.r}, ${this.state.color.g}, ${this.state.color.b}, ${this.state.color.a})`,\n                },\n                center: {\n                    margin: 'auto',\n                    width: '50%',\n                    padding: '50px',\n                    textAlign: 'center',\n                },\n                update: {\n                    background : 'white',\n                    width: '30%',\n                    border: '1px solid black',\n                    textAlign: 'center',\n                }\n            },\n        });\n\n        return <div>\n            <div style={styles.color}>\n                <div style={styles.center}>\n                    <label>Input Tag\n                    <br/>\n                        <input\n                        type=\"text\"\n                        value={this.state.tag}\n                        onChange={this.onChangeTag}\n                    /></label>\n                    <button style={styles.update}\n                        type=\"button\"\n                        onClick={this.daycardHandleUpdate}\n                    >Update</button>\n                </div>\n            </div>\n            <SliderPicker color={this.state.color} onChange={this.handleChange} onChangeComplete={this.handleChangeComplete} />\n        </div>\n\n    }\n}\n\nexport default Daycard;","import React from 'react';\nimport Calendar from './Calendar';\nimport Daycard from './Daycard';\n\nconst INITIAL_STATE = {\n  selectedDay: 0,\n  changingColor: \"#f17013\",\n  changingTag: \"\",\n  days: [\n    {\n     color : \"\",\n     tag : \"\"\n    },\n    {\n      color : \"\",\n      tag : \"\"\n     },\n     {\n      color : \"\",\n      tag : \"\"\n     },\n     {\n      color : \"\",\n      tag : \"\"\n     },\n     {\n      color : \"\",\n      tag : \"\"\n     },\n     {\n      color : \"\",\n      tag : \"\"\n     },\n     {\n      color : \"\",\n      tag : \"\"\n     },\n  ]\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  handleSelectedDay = (index) => { this.setState({ selectedDay: index }) }\n\n  onUpdateSelectedDay = () => {\n    this.setState(prevState => {\n      const nextDay = prevState.selectedDay + 1 ;\n      const days = prevState.days.map((day, j) => {\n        if (j === prevState.selectedDay) {\n          return { color: prevState.changingColor, tag: prevState.changingTag };\n        } else {\n          return day;\n        }\n      });\n      return {\n        selectedDay : nextDay,\n        days,\n      };\n    });\n  };\n\n  handleChangingColor = (color) => {\n    this.setState({ changingColor: color });\n  };\n\n  handleChangingTag = (tag) => {\n    this.setState({ changingTag: tag });\n  };\n\n  onChangeSelectedDay = event => {\n    this.setState({ selectedDay: parseInt(event.target.value) });\n  };\n\n  onAddItem = () => {\n    this.setState(prevState => {\n      const days = prevState.days.concat({ color: \"\", tag: \"\" });\n      return {\n        days,\n      };\n    });\n  };\n\n  render() {\n    const { days,selectedDay } = this.state;\n    console.log(this.state);\n    return <div>\n      <button\n        type=\"button\"\n        onClick={this.onAddItem}\n      >Add a day</button>\n      <Calendar userSelectedDay = {selectedDay} userDays={days} handleSelectedDay={this.handleSelectedDay} />\n      <br />\n      <Daycard handleChangingColor={this.handleChangingColor} handleChangingTag={this.handleChangingTag} handleUpdate = {this.onUpdateSelectedDay}>\n      </Daycard>\n    </div>\n\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}