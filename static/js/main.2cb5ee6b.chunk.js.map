{"version":3,"sources":["Day.js","Calendar.js","Daycard.js","App.js","index.js"],"names":["Day","props","handleOnClick","console","log","handleSelectedDay","state","index","dayIndex","selected","styles","reactCSS","color","background","this","dayColor","dayClasses","classNames","style","className","onClick","React","Component","Calendar","isLoading","userDays","map","day","Daycard","onChangeTag","event","setState","tag","target","value","handleChange","rgb","handleChangeComplete","handleChangingColor","hex","r","g","b","a","width","height","borderRadius","center","margin","border","padding","textAlign","type","onChange","onChangeComplete","INITIAL_STATE","selectedDay","changingColor","days","App","onUpdateSelectedDay","prevState","j","onChangeSelectedDay","parseInt","onAddItem","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2cb5ee6b.chunk.js","sourcesContent":["import React from 'react';\nimport \"./Day.css\";\nimport classNames from 'classnames'\nimport reactCSS from 'reactcss'\n\n\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      index: this.props.dayIndex,\n      selected: false\n    }\n  }\n\n  handleOnClick = () => {\n    console.log(this.props);\n    this.props.handleSelectedDay(this.state.index);\n  }\n\n  render() {\n    const styles = reactCSS({\n      'default': {\n        color: {\n          background: this.props.dayColor,\n        }\n      },\n    });\n    const dayClasses = classNames('day');\n    return <div style = {styles.color} className={dayClasses} onClick={this.handleOnClick}>\n      <h4> {this.state.index} </h4>\n    </div>\n\n  }\n}\n\nexport default Day;","import React from 'react';\nimport Day from './Day';\n\n\n\nclass Calendar extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  state = {\n    isLoading : true\n  }\n  \n\n  render(){\n    console.log(this.props.userDays)\n  return <div >\n    <h1>Calendar</h1>\n    {this.props.userDays.map((day,index) => {\n      return <Day dayColor={day.color} handleSelectedDay={this.props.handleSelectedDay} dayIndex={index}/>\n    }\n    )\n    }\n  </div>}\n}\n\nexport default Calendar;","import React from 'react';\nimport reactCSS from 'reactcss'\nimport { SliderPicker } from 'react-color';\n\n\nclass Daycard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        color: {\n            r: '241',\n            g: '112',\n            b: '19',\n            a: '1',\n          },\n          tag: \"\"\n    }\n  }\n\n  onChangeTag = (event) => {\n    this.setState({ tag: event.target.value })\n  }\n\n  handleChange = (color) => {\n    this.setState({ color: color.rgb })\n  };\n  \n  handleChangeComplete = (color, event) => {\n    this.props.handleChangingColor(color.hex);\n  };\n\n  render() {\n    const styles = reactCSS({\n        'default': {\n          color: {\n            width: '100%',\n            height: '200px',\n            borderRadius: '10px',\n            background: `rgba(${ this.state.color.r }, ${ this.state.color.g }, ${ this.state.color.b }, ${ this.state.color.a })`,\n          },\n          center:{\n                margin: 'auto',\n                width: '50%',\n                border: '3px solid green',\n                padding: '50px',\n                textAlign: 'center',\n          }\n        },\n      });\n\n    return <div>\n        <div style = {styles.color}>\n            <div style = {styles.center}>\n            <label>Input Tag:<input\n        type=\"text\"\n        value={this.state.tag}\n        onChange={this.onChangeTag}\n      /></label>\n            </div>\n        </div>\n        <SliderPicker color={ this.state.color } onChange={ this.handleChange } onChangeComplete={this.handleChangeComplete }/>\n    </div>\n\n  }\n}\n\nexport default Daycard;","import React from 'react';\nimport Calendar from './Calendar';\nimport Daycard from './Daycard';\n\nconst INITIAL_STATE = {\n  selectedDay: 0,\n  changingColor: \"#f17013\",\n  days: [\n    {\n     color : \"\"\n    },\n    {\n      color : \"\"\n     },\n     {\n      color : \"\"\n     },\n     {\n      color : \"\"\n     },\n     {\n      color : \"\"\n     },\n     {\n      color : \"\"\n     },\n     {\n      color : \"\"\n     },\n  ]\n};\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = INITIAL_STATE;\n  }\n\n  handleSelectedDay = (index) => { this.setState({ selectedDay: index }) }\n\n  onUpdateSelectedDay = () => {\n    this.setState(prevState => {\n      const days = prevState.days.map((day, j) => {\n        if (j === prevState.selectedDay) {\n          return { color: prevState.changingColor };\n        } else {\n          return day;\n        }\n      });\n      return {\n        days,\n      };\n    });\n  };\n\n  handleChangingColor = (color) => {\n    this.setState({ changingColor: color });\n  };\n\n  onChangeSelectedDay = event => {\n    this.setState({ selectedDay: parseInt(event.target.value) });\n  };\n\n  onAddItem = () => {\n    this.setState(prevState => {\n      const days = prevState.days.concat({ color: \"\" });\n      return {\n        days,\n      };\n    });\n  };\n\n  render() {\n    const { days } = this.state;\n    console.log(this.state);\n    return <div>\n      <button\n        type=\"button\"\n        onClick={this.onAddItem}\n      >Add a day</button>\n      <Calendar userDays={days} handleSelectedDay={this.handleSelectedDay} />\n      <br />\n      {this.state.selectedDay}<button\n        type=\"button\"\n        onClick={this.onUpdateSelectedDay}\n      >Update</button>\n      <Daycard handleChangingColor={this.handleChangingColor}/>\n    </div>\n\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}